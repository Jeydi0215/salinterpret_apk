name: Build APK
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            zip \
            unzip \
            openjdk-11-jdk \
            python3-dev \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo-dev \
            cmake \
            libffi-dev \
            libssl-dev
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade Cython==0.29.33 buildozer==1.5.0
      
      - name: Find buildozer.spec
        id: find_spec
        run: |
          SPEC_PATH=$(find . -name "buildozer.spec" | head -n 1)
          if [ -n "$SPEC_PATH" ]; then
            SPEC_DIR=$(dirname "$SPEC_PATH")
            echo "Found buildozer.spec in: $SPEC_DIR"
            echo "spec_dir=$SPEC_DIR" >> $GITHUB_OUTPUT
          else
            echo "Creating default buildozer.spec in current directory"
            buildozer init
            echo "spec_dir=." >> $GITHUB_OUTPUT
          fi
      
      - name: Build APK
        run: |
          cd ${{ steps.find_spec.outputs.spec_dir }}
          buildozer android debug
          
      - name: List all APKs
        if: always()
        run: |
          echo "Looking for APK files..."
          find . -name "*.apk"
      
      - name: Create Release
        if: success()
        run: |
          APK_PATH=$(find . -name "*.apk" | head -n 1)
          if [ -n "$APK_PATH" ]; then
            echo "APK found at: $APK_PATH"
            
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$APK_PATH" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/tags/latest/assets?name=asl_translator.apk"
          else
            echo "No APK file was found!"
            exit 1
          fi
