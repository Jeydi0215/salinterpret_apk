name: Build ASL Translator APK
on:
  push:
    branches: [ master, main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Cache Buildozer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.buildozer
            .buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('salinterpret/buildozer.spec') }}
        
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-11-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
          
      - name: Install build dependencies
        run: |
          pip install --upgrade Cython==0.29.33 virtualenv buildozer==1.5.0
          
      - name: Build APK with Buildozer
        run: |
          # Move to the directory containing buildozer.spec
          cd salinterpret
          
          # Set environment variables for NDK/SDK
          export PATH=$PATH:~/.buildozer/android/platform/android-sdk/tools/bin
          export ANDROID_SDK_ROOT=~/.buildozer/android/platform/android-sdk
          
          # Clean any previous builds
          buildozer clean
          
          # Build the APK
          buildozer android debug
        
      - name: Upload Debug APK
        uses: actions/upload-artifact@v2
        with:
          name: asl-translator-debug
          path: salinterpret/bin/*.apk
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: latest
          name: Development Build
          draft: false
          prerelease: true
          files: salinterpret/bin/*.apk
          token: ${{ secrets.GITHUB_TOKEN }}
