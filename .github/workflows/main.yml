name: Build APK
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: kivy/buildozer:latest  # Using the official Kivy Buildozer image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
      
      - name: Cache Buildozer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.buildozer
            salinterpret/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('salinterpret/buildozer.spec') }}
      
      - name: List files and check structure
        run: |
          echo "Repository contents:"
          ls -la
          echo "Salinterpret directory:"
          ls -la salinterpret || echo "Directory not found"
      
      - name: Build APK with Buildozer
        run: |
          cd salinterpret
          buildozer android debug
      
      - name: List APK files
        run: |
          find salinterpret/bin -name "*.apk" || echo "No APK files found"
      
      - name: Save APK to workspace
        run: |
          mkdir -p /github/workspace/output
          cp salinterpret/bin/*.apk /github/workspace/output/ || echo "No APK files to copy"
      
      # Use GitHub CLI to create a release with the APK
      - name: Create GitHub Release
        if: success()
        run: |
          apt-get update
          apt-get install -y gh
          
          APK_PATH=$(find /github/workspace/output -name "*.apk" | head -n 1)
          if [ -n "$APK_PATH" ]; then
            echo "APK found at: $APK_PATH"
            
            # Create release with found APK
            gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
            gh release create v1.0 "$APK_PATH" --title "ASL Translator APK" --notes "Built with GitHub Actions"
          else
            echo "No APK file was found!"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
